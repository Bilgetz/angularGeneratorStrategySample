buildscript {
    ext {
        springBootVersion = '1.3.0.RC1'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("fr.hopelessworld.plugin:HopelessEntityAnalyzer:0.2")
        classpath("fr.hopelessworld.plugin:HopelessAngularGeneratorStrategy:0.1")
    }
}



apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'war'
apply plugin: 'fr.hopelessworld.plugin.entity-analyzer'

sourceSets {
   generated{
        java {
        	srcDir "${buildDir}/generated/java/"
    	}
    }

}

compileJava{
    dependsOn(analyze)
    source    += sourceSets.generated.java
}


war {
    baseName = 'angularGeneratorStrategySample'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

configurations {
    providedRuntime
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('com.h2database:h2')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test') 
    compile('org.apache.commons:commons-lang3:3.4')
}

dependencyManagement {
	imports { 
		mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.M1" 
	}
}


eclipse {
    classpath {
    	 downloadSources = true
		 downloadJavadoc = true
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
    
    wtp {
    	component {
    		resource sourcePath: '/build/generated/js', deployPath: '/WEB-INF/classes/static/js'
    	}
	}

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

analyzeEntity {
     entityDirectory = file("/src/main/java/fr/hopelessworld/sample/entity")
    strategies {
        controllers {
            strategyClass = "fr.hopelessworld.plugin.strategy.impl.AngularControllerStrategy"
            outputFiles = file("${buildDir}/generated/js/controllers-${version}.js")
        }
        directives {
            strategyClass = "fr.hopelessworld.plugin.strategy.impl.AngularDirectiveStrategy"
            outputFiles = file("${buildDir}/generated/js/directives-${version}.js")
        }
        factory {
            strategyClass = "fr.hopelessworld.plugin.strategy.impl.AngularFactoryStrategy"
            outputFiles = file("${buildDir}/generated/js/factorys-${version}.js")
        }
        route {
            strategyClass = "fr.hopelessworld.plugin.strategy.impl.AngularRouteStrategy"
            outputFiles = file("${buildDir}/generated/js/routes-${version}.js")
        }
        templates {
            strategyClass = "fr.hopelessworld.plugin.strategy.impl.AngularTemplateStrategy"
            outputFiles = file("${buildDir}/generated/js/templates-${version}.js")
        }
        customRest {
            strategyClass = "fr.hopelessworld.plugin.strategy.impl.AngularSpringDataRestCustomControllerStrategy"
            outputFiles = file("${buildDir}/generated/java")
        }
    }
}